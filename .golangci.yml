run:
  timeout: 5m
  tests: true

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true
  
  goconst:
    min-len: 3
    min-occurrences: 3
  
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  
  gocyclo:
    min-complexity: 15
  
  goimports:
    local-prefixes: github.com/jscharber/eAIIngest
  
  mnd:
    checks:
      - argument
      - case
      - condition
      - operation
      - return
  
  govet:
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  
  lll:
    line-length: 120
  
  misspell:
    locale: US
  
  revive:
    rules:
      - name: var-naming
        severity: warning
        disabled: false
        arguments:
          - ["ID"] # Allow ID instead of Id
      - name: exported
        severity: warning
        disabled: false

linters:
  disable-all: true
  enable:
    - bodyclose
    - copyloopvar
    - dogsled
    - dupl
    - errcheck
    - exhaustive
    - funlen
    - gochecknoinits
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - mnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - revive
    - staticcheck
    - stylecheck
    - unconvert
    - unparam
    - unused
    - whitespace

issues:
  exclude-files:
    - ".*_generated.go$"
    - ".*\\.pb\\.go$"
  exclude-dirs:
    - vendor
    - bin
    - .git
    - pkg/controllers
    - cmd/operator
  exclude-rules:
    # Exclude all typecheck errors from controller files
    - path: "pkg/controllers/"
      text: "undefined.*Get.*DataSourceReconciler|undefined.*Update.*DataSourceReconciler|undefined.*Create.*DataSourceReconciler|undefined.*Delete.*DataSourceReconciler|undefined.*Status.*DataSourceReconciler"
      linters:
        - typecheck
    - path: "pkg/controllers/"
      text: "undefined.*Get.*TenantReconciler|undefined.*Update.*TenantReconciler|undefined.*Create.*TenantReconciler|undefined.*Delete.*TenantReconciler|undefined.*Status.*TenantReconciler"
      linters:
        - typecheck
    # Exclude all controller directory issues broadly
    - path: "pkg/controllers/"
      linters:
        - typecheck
        - staticcheck
        - govet
        - unused
        - ineffassign
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - mnd
        - funlen
        - dupl
        - gosec
        - lll
    
    # Exclude some linters from running on mock files
    - path: mock_.*\.go
      linters:
        - mnd
        - funlen
        - dupl
        - gosec
        - lll
        - revive
    
    # Exclude some linters from running on generated files
    - path: .*_generated\.go
      linters:
        - mnd
        - funlen
        - dupl
        - gosec
        - lll
        - revive
    
    # Exclude shadow checking on variables named 'err'
    - text: "shadow: declaration of \"err\""
      linters:
        - govet
    
    # Exclude shadow checking on variables named 'ctx'
    - text: "shadow: declaration of \"ctx\""
      linters:
        - govet

severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters:
        - dupl
      severity: info
    - linters:
        - mnd
      severity: info